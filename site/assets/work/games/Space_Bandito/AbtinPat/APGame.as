package AbtinPat {	import Assets.Screens.*;	import flash.display.DisplayObject;	import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.media.SoundTransform;	import flash.text.TextField;	import flash.display.FrameLabel;	import flash.utils.setTimeout;	import com.Engine.*;	import com.Engine.events.APEvent;	import Assets.*;	import flash.display.MovieClip;	import flash.display.SimpleButton;	import com.Engine.Sound.SoundEngine;	import com.Engine.HID.HIDManager;		public class APGame extends MovieClip{					public var title:Title;		public var results:Results;		public var loading:MovieClip;		public var loadingComplete:LoadingCompleteMenu;		public var credits:Credits;				/*public var pointsText:TextField;		public var loadingText:TextField;		public var percentText:TextField;		public var gameOverText:TextField;*/				private var _AP:APEngine;		private var _config:APConfig;		private var _level:int = 0;		private var _score:Number = 0;		private var _previousScore:Number = 0;				protected var se:SoundEngine;		protected var hm:HIDManager;				var enterLevelMenu:EnterLevelMenu;		var levelCompletelMenu:LevelCompleteMenu;				public function APGame() {			enumerateFrameLabels();			addEventListener(APEvent.FRAME_TITLE, showTitle, false, 0, true);			_config = new APConfig();			//hm = HIDManager.getInstance();			//hm.setHIDMouseKeyboard();			//addChild(hm);			se = SoundEngine.getInstance();		}				private function dispatchFrameEvent():void {			dispatchEvent(new APEvent(currentLabel));		}				private function enumerateFrameLabels():void {			for each (var label:FrameLabel in currentLabels)				addFrameScript(label.frame-1, dispatchFrameEvent);		}				//TITLE SCREEN RELATED METHODS		public function playTitleMusic(e:APEvent) {			se.removeEventListener(APEvent.SOUNDS_LOAD_COMPLETE, playTitleMusic);			se.playSound("titleMusic", 0, -1);			title.addButtonListeners();			title.addEventListener(APEvent.PLAY_GAME, playGame, false, 0, true);			title.addEventListener(APEvent.SHOW_CONTROLS, showControls, false, 0, true);		}				protected function showTitle(e:APEvent):void {			stop();			se.loadSounds("Assets/Sounds/titleMusic.xml");			se.addEventListener(APEvent.SOUNDS_LOAD_COMPLETE, playTitleMusic, false, 0, true);		}						protected function showControls(e:APEvent):void {			var controls:ControlsPanel = new ControlsPanel();			controls.x = stage.stageWidth/2;			controls.y = stage.stageHeight/2;			addChild(controls);		}				protected function showPauseMenu(e:APEvent):void {			var pause:PauseMenu = new PauseMenu();			pause.x = stage.stageWidth/2;			pause.y = stage.stageHeight/2;			addChild(pause);			se.playSound("pauseMusic", 0, -1);			_AP.stopGame();		}				protected function hidePauseMenu(e:APEvent):void {			se.stopSound("pauseMusic");			_AP.startGame();		}				protected function hideLoadingScreen(e:APEvent):void {			//loadingText.visible = false;			//percentText.visible = false;			loadingComplete.removeEventListener(APEvent.HIDE_LOADING, hideLoadingScreen);			gotoAndStop(APEvent.FRAME_GAME);			addChild(_AP);			addEventListener(APEvent.GAME_OVER, gameOver, false, 0, true);				//se = SoundEngine.getInstance();			//se.playSound("testsound");			//game.quitButton.addEventListener(MouseEvent.CLICK, gameOver, false, 0, true);			se.stopSound("loadingMusic");			_AP.startGame();		}				protected function showEnterLevelMenu(e:APEvent):void {			enterLevelMenu = new EnterLevelMenu();			var levelNum:int;			var levelName:String;			if ( _AP.getLevelNameClicked() == "outsideClouds" ) {				levelNum = 1;				levelName = "Level 1";			}			else if ( _AP.getLevelNameClicked() == "insideClouds" ) {				levelNum = 2;				levelName = "Level 2";			}			else if ( _AP.getLevelNameClicked() == "home" ) {				levelNum = 3;				levelName = "Level 3";			}			enterLevelMenu.setLevelInfo(levelName, levelNum);			enterLevelMenu.x = stage.stageWidth/2;			enterLevelMenu.y = stage.stageHeight / 2;			addEventListener(APEvent.ENTER_LEVEL, enterLevel, false, 0, true);			addChild(enterLevelMenu);			_AP.stopGame();		}				protected function hideEnterLevelMenu(e:APEvent):void {			_AP.startGame();		}				protected function showLevelCompleteMenu(e:APEvent):void {			levelCompletelMenu = new LevelCompleteMenu();			levelCompletelMenu.x = stage.stageWidth/2;			levelCompletelMenu.y = stage.stageHeight / 2;			addChild(levelCompletelMenu);			addEventListener(APEvent.EXIT_LEVEL, exitLevel, false, 0, true);		}				protected function exitLevel(e:APEvent):void {			_AP.removeEventListener(ProgressEvent.PROGRESS, loadProgress);			_AP.removeEventListener(APEvent.LEVEL_LOAD_COMPLETE, loadComplete);			_AP.removeEventListener(APEvent.INVENTORY_UPDATE, inventoryUpdate);			_AP.removeEventListener(APEvent.SHOW_PAUSE, showPauseMenu);			removeEventListener(APEvent.HIDE_PAUSE, hidePauseMenu);			_AP.removeEventListener(APEvent.LEVEL_COMPLETE, showLevelCompleteMenu);						_AP.destroy();			setupWorld();		}				protected function playGame(e:APEvent):void {			stop();			removeEventListener(APEvent.PLAY_GAME, playGame);			removeEventListener(APEvent.SHOW_CONTROLS, showControls);			se.stopSound("titleMusic");			setupWorld();			}						protected function mainMenu(e:APEvent):void {			gotoAndStop(APEvent.FRAME_TITLE);		}						//GAME SCREEN RELATED METHODS				protected function gameOver(e:APEvent):void {			removeEventListener(APEvent.GAME_OVER, gameOver);			_AP.stopGame();			_AP.destroy();			_AP.removeEventListener(APEvent.SHOW_PAUSE, showPauseMenu);			removeEventListener(APEvent.HIDE_PAUSE, hidePauseMenu);			_AP.removeEventListener(APEvent.SHOW_ENTER_LEVEL, showEnterLevelMenu);			removeEventListener(APEvent.HIDE_ENTER_LEVEL, hideEnterLevelMenu);			se.loadSounds("Assets/Sounds/titleMusic.xml");			se.addEventListener(APEvent.SOUNDS_LOAD_COMPLETE, gameOverMenu, false, 0, true);		}				protected function gameOverMenu(e:APEvent):void {			se.removeEventListener(APEvent.SOUNDS_LOAD_COMPLETE, gameOverMenu);			gotoAndStop(APEvent.FRAME_RESULTS);			results.addEventListener(APEvent.MAIN_MENU, mainMenu, false, 0, true);			results.addEventListener(APEvent.FRAME_CREDITS, CreditsMenu, false, 0, true);			se.playSound("gameOverStinger");		}				protected function CreditsMenu(e:APEvent):void {			results.removeEventListener(APEvent.FRAME_CREDITS, CreditsMenu);			gotoAndStop(APEvent.FRAME_CREDITS);			credits.addEventListener(APEvent.MAIN_MENU, mainMenu, false, 0, true);			se.playSound("levelCompleteStinger");		}				public function playLoadingMusic(e:APEvent) {			se.removeEventListener(APEvent.SOUNDS_LOAD_COMPLETE, playLoadingMusic);			se.playSound("loadingMusic", 0, -1);		}				public function setupWorld() {			gotoAndStop(APEvent.FRAME_LOADING);			se.loadSounds("Assets/Sounds/loadingMusic.xml");			se.addEventListener(APEvent.SOUNDS_LOAD_COMPLETE, playLoadingMusic, false, 0, true);			/*loadingText.visible = true;			percentText.text = "0%";			percentText.visible = true;			gameOverText.visible = false;*/			_AP = new APEngine();			_AP.init(_config);			_AP.startLevel(0);			_AP.addEventListener(ProgressEvent.PROGRESS, loadProgress, false, 0, true);			_AP.addEventListener(APEvent.LEVEL_LOAD_COMPLETE, loadComplete, false, 0, true);			//_AP.addEventListener(APEvent.ENTER_LEVEL, enterLevel, false, 0, true);			//_AP.addEventListener(APEvent.PLAYER_DIE, playerDied, false, 0, true);			_AP.addEventListener(APEvent.INVENTORY_UPDATE, inventoryUpdate, false, 0, true);			_AP.addEventListener(APEvent.SHOW_PAUSE, showPauseMenu, false, 0, true);			addEventListener(APEvent.HIDE_PAUSE, hidePauseMenu, false, 0, true);			_AP.addEventListener(APEvent.SHOW_ENTER_LEVEL, showEnterLevelMenu, false, 0, true);			addEventListener(APEvent.HIDE_ENTER_LEVEL, hideEnterLevelMenu, false, 0, true);		}				private function loadProgress(e:ProgressEvent):void {			loading.loadProgressText.text = Math.round(100 * (e.bytesLoaded/e.bytesTotal)) + "%";		}				private function loadComplete(e:APEvent):void {			gotoAndStop(APEvent.FRAME_LOADING_COMPLETE);			loadingComplete.addEventListener(APEvent.HIDE_LOADING, hideLoadingScreen, false, 0, true);		}				private function enterLevel(e:APEvent) {						gotoAndStop(APEvent.FRAME_LOADING);			enterLevelMenu.removeEventListener(APEvent.ENTER_LEVEL, enterLevel);			//_AP.stopGame();			_AP.destroy();			se.loadSounds("Assets/Sounds/loadingMusic.xml");			se.addEventListener(APEvent.SOUNDS_LOAD_COMPLETE, playLoadingMusic, false, 0, true);			_AP = new APEngine();			_AP.init(_config);			_AP.startLevel(enterLevelMenu.levelNumber);			_AP.addEventListener(ProgressEvent.PROGRESS, loadProgress, false, 0, true);			_AP.addEventListener(APEvent.LEVEL_LOAD_COMPLETE, loadComplete, false, 0, true);			_AP.addEventListener(APEvent.INVENTORY_UPDATE, inventoryUpdate, false, 0, true);			_AP.addEventListener(APEvent.SHOW_PAUSE, showPauseMenu, false, 0, true);			addEventListener(APEvent.HIDE_PAUSE, hidePauseMenu, false, 0, true);			_AP.addEventListener(APEvent.LEVEL_COMPLETE, showLevelCompleteMenu, false, 0, true);		}				private function playerDied(e:APEvent) {			_AP.stopGame();			trace("GAME OVER: Player killed by",e.data);			_AP.destroy();			removeChild(_AP);			//gameOverText.visible = true;		}				private function inventoryUpdate(e:APEvent) {			//_score = _previousScore + _AP.inventoryWorth;			//pointsText.text = _score.toString();		}		}	}