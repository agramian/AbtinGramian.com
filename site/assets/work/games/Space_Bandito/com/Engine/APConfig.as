package com.Engine {		import flash.geom.Rectangle;	import flash.geom.Vector3D;	import flash.ui.Keyboard;	import flash.display.Loader;	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.ProgressEvent;	import flash.events.SecurityErrorEvent;	import flash.net.*;	import flash.system.LoaderContext;	import flash.events.IOErrorEvent;	import flash.net.URLRequest;		public class APConfig {				protected var _currentUser:XML;				public var gravity:Vector3D = new Vector3D(0,25);		public var friction:Number = .75;		public var drag:Number = .92;				//INPUT		public var keyJump:int = Keyboard.UP;		public var keyUse:int = Keyboard.DOWN;		public var keyLeft:int = Keyboard.LEFT;		public var keyRight:int = Keyboard.RIGHT;				//PLAYER PROPERTIES		public var numRedOrbs = 0;		public var numBlueOrbs = 0;		public var numGreenOrbs = 0;		public var numYellowOrbs = 100;		public var currentWeapon = 1;		public var score = 0;		public var playerState = 1;				public function APConfig() {			var userRequest:URLRequest = new URLRequest("Assets/UserFiles/user.xml");			var userLoader:URLLoader = new URLLoader(userRequest);			userLoader.addEventListener(Event.COMPLETE, userLoaded, false, 0, true);			userLoader.addEventListener(IOErrorEvent.IO_ERROR, userError, false, 0, true);			userLoader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityError, false, 0, true);		}				protected function userLoaded(e:Event):void {			_currentUser = XML(e.target.data);			var userInfo:XMLList = _currentUser.children();			numRedOrbs = userInfo[0].@red;			numBlueOrbs = userInfo[0].@blue;			numYellowOrbs = userInfo[0].@yellow;			numGreenOrbs = userInfo[0].@green;			score = userInfo[1].@score;			playerState = userInfo[1].@state;						var so:SharedObject = SharedObject.getLocal("userData");			so.data.numRedOrbs = numRedOrbs;			so.data.numBlueOrbs = numBlueOrbs;			so.data.numGreenOrbs = numGreenOrbs;			so.data.numYellowOrbs = numYellowOrbs;			so.data.score = score;			so.data.playerState = playerState;			so.flush(); // writes changes to disk					}				protected function userError(e:IOErrorEvent):void {			trace("APEngine: Error Loading User:",e.text);		}				protected function securityError(e:SecurityErrorEvent):void {			trace("SecurityError:",e.text);		}				public function saveUserInfo():void {						var so:SharedObject = SharedObject.getLocal("userData");			so.data.numRedOrbs = numRedOrbs;			so.data.numBlueOrbs = numBlueOrbs;			so.data.numGreenOrbs = numGreenOrbs;			so.data.numYellowOrbs = numYellowOrbs;			so.data.score = score;			so.data.playerState = playerState;			so.flush(); // writes changes to disk			/*			var userInfo:XMLList = _currentUser.children();			userInfo[0].@red = "10";			userInfo[0].@blue = "10";			userInfo[0].@yellow = "10";			userInfo[0].@green = "10";			var file:FileReference = new FileReference();						file.save(_currentUser, "userkj.xml");			*/		}			}		}